volumes:
  pmw-data:
  geoserver-data:

networks:
  tailormap:
    external: true
    name: ${TAILORMAP_COMPOSE_PROJECT_NAME:-tailormap-planmonitor-wonen-snapshot}_default
  reverse-proxy:
    external: true
    name: ${PROXY_NETWORK:-traefik}

services:
  pmw-db:
    container_name: ${COMPOSE_PROJECT_NAME}-pmw-db
    image: postgis/postgis:16-3.5
    restart: unless-stopped
    environment:
      POSTGRES_USER: planmonitor-wonen
      POSTGRES_PASSWORD: ${PMW_DB_PASSWORD:-planmonitor-wonen}
    volumes:
      - pmw-data:/var/lib/postgresql/data
    networks:
      - default
      - reverse-proxy
      - tailormap
    labels:
      - "traefik.tcp.routers.postgres-pmw.rule=HostSNI(`${HOST}`)"
      - "traefik.tcp.routers.postgres-pmw.tls=true"
      - "traefik.tcp.routers.postgres-pmw.tls.certresolver=letsencrypt"
      - "traefik.tcp.routers.postgres-pmw.entrypoints=postgres-pmw"
      - "traefik.tcp.middlewares.postgres-pmw-ipallowlist.ipallowlist.sourcerange=${PMW_IP_ALLOWLIST_RANGE}"
      - "traefik.tcp.routers.postgres-pmw.middlewares=postgres-pmw-ipallowlist"
      - "traefik.tcp.services.postgres-pmw.loadbalancer.server.port=5432"
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
    healthcheck:
      interval: 1m
      timeout: 5s
      retries: 2
      start_period: 20s
      start_interval: 8s
      test: pg_isready -U planmonitor-wonen

  pmw-api:
    container_name: ${COMPOSE_PROJECT_NAME}-pmw-api
    image: ghcr.io/b3partners/planmonitor-wonen-api:${PMW_API_VERSION:-snapshot}
    restart: unless-stopped
    depends_on:
      pmw-db:
        condition: service_healthy
    environment:
      - "TZ=Europe/Amsterdam"
      - "SERVER_ADDRESS=0.0.0.0"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://pmw-db/planmonitor-wonen"
      - "SPRING_DATASOURCE_PASSWORD=${PMW_DB_PASSWORD:-planmonitor-wonen}"
      - "TAILORMAPAPI_CREDENTIALS_URL=http://tailormap:8080/api/user"
    networks:
      - default
      - reverse-proxy
      - tailormap
    labels:
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-pmw.loadbalancer.server.port=8081"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-pmw.rule=Host(`${HOST:-localhost}`) && PathPrefix(`/api/planmonitor-wonen`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-pmw.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-pmw.tls.certresolver=letsencrypt"
      - "traefik.docker.network=${PROXY_NETWORK:-traefik}"
      - "traefik.enable=true"

  geoserver:
    container_name: ${COMPOSE_PROJECT_NAME}-geoserver
    image: docker.osgeo.org/geoserver:2.27.1
    environment:
      SKIP_DEMO_DATA: true
      GEOSERVER_CSRF_WHITELIST: ${HOST}
      INSTALL_EXTENSIONS: false
      STABLE_EXTENSIONS: web-resource,geopkg-output,excel,css
      PROXY_BASE_URL: https://${HOST}/geoserver
    volumes:
      - geoserver-data:/opt/geoserver_data
    networks:
      - default
      - reverse-proxy
      - tailormap
    labels:
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-geoserver.rule=Host(`${HOST:-localhost}`) && PathPrefix(`/geoserver`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-geoserver.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-geoserver.tls.certresolver=letsencrypt"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-geoserver.loadbalancer.server.port=8080"
      - "traefik.docker.network=${PROXY_NETWORK:-traefik}"
      - "traefik.enable=true"
    restart: unless-stopped
